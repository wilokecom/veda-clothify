{% assign uniqueId = 'id_9481935f-96c1-424d-81ff-c140f8a8ff81' %}
{% assign builderMode = false %}
{% assign envatoMode = true %}
{% liquid
	if section.settings.VEDA_switch_8
		assign backgroundFixed = 'fixed'
	else
		assign backgroundFixed = 'scroll'
	endif
	
	if section.settings.VEDA_select_6 == 'color'
		assign opacity = section.settings.background_opacity | times: 0.01
		assign modifyBackground = section.settings.background_color | color_modify: 'alpha', opacity
		assign backgroundColor = 'background-color: ' | append: modifyBackground | append: ';'
	else
		assign backgroundColor = ''
	endif
	
	if section.settings.VEDA_select_6 == 'image' and section.settings.VEDA_image_1.src
		assign bgImage = section.settings.VEDA_image_1.src | image_url: width: 2000
		
		assign backgroundImage = 'background-image: url(' | append: bgImage | append: ');background-attachment: ' | append: backgroundFixed | append: ';background-size: ' | append: section.settings.VEDA_select_5 | append: ';'
	elsif section.settings.VEDA_select_6 == 'image' and section.settings.VEDA_image_1.src == blank
		assign bgImage = 'https://cdn.shopify.com/s/files/1/0552/5510/5616/files/udxhtnzxtq.png?v=1681903122&width=1000'
		
		assign backgroundImage = 'background-image: url(' | append: bgImage | append: ');background-attachment: ' | append: backgroundFixed | append: ';background-size: ' | append: section.settings.VEDA_select_5 | append: ';'
	else
		assign backgroundImage = ''
	endif
	
	assign sectionPadding = 'padding-top: ' | append: 50 | append: 'px;padding-right: ' | append: null | append: 'px;padding-bottom: ' | append: 50 | append: 'px;padding-left: ' | append: null | append: 'px;'
	
	if section.settings.VEDA_select_7 == 'full_width'
		assign containerType = 'container-fluid'
	else
		assign containerType = 'container'
	endif
	
	assign _class = false
	
	assign _component = false
	
	assign _default_link = false
%}
{% capture Content %}
	{% comment %}CẢNH BÁO: Các field settings đã bị cắt vợi đi để pass qua shopify theme check => Các item sẽ trở thành y hệt nhau về một số thứ => Check code để fix css sao cho giống với theme demo => Ví dụ mỗi item đều có field color picker để setup background. Item 1 màu xanh, Item 2 màu đỏ => Sync ở chế độ cắt vợi đi thì cả 2 Item sẽ thành màu xanh => Sai với theme demo => Cần fix{% endcomment %}
	
	{% for block in section.blocks %}
		{% if block.type == 'content' %}
			{% assign item = block.settings %}
			
			{% liquid
				assign borderRadius = 0
				
				if item.border_radius
					assign borderRadius = item.border_radius
				endif
			%}
			<div
				class="swiper-slide w:var(--width-xs)@+sm"
				style="--width-xs: calc({{ 100 | divided_by: 1 }}% - {{ 40 | divided_by: 2 }}px);"
			>
				<div
					class="d:flex w:100% trs:0.3s"
					style="text-align: left"
				>
					<span class="d:block fz:30px c:color-primary mr:20px" >{{ item.content___icon }}</span>
					<div>
						<h5 class="fz:20px fw:500 c:color-gray9" data-css="{{ "css_4148353258" }}">
							{{ item.content___title }}
						</h5>
						{% if item.content___description %}
							<div class="c:color-gray7 mt:10px" >
								{{ item.content___description }}
							</div>
						{% endif %}
					</div>
				</div>
			</div>
		{% endif %}
	{% endfor %}
{% endcapture %}

{% capture SwiperSlider %}
	{% liquid
		assign delay = 1000000000
		
		assign gap = 20
		
		if section.settings.VEDA_switch_3
			assign delay = 4000
		endif
		
		if section.settings.slider_settings___delay and section.settings.VEDA_switch_3
			assign delay = section.settings.slider_settings___delay
		endif
	%}
	<div
		class="veda-swiper"
		data-options="
      {
        slidesPerView: 'auto',
        autoplay: {
          delay: {{ delay }}
        },
        loop: {{ section.settings["slider_settings___loop"] }},
        navigation: {
          nextEl: '[data-id={{ uniqueId }}] .swiper-button-next',
          prevEl: '[data-id={{ uniqueId }}] .swiper-button-prev'
        },
        spaceBetween: {{ gap }},
        breakpoints: {
          768: { slidesPerView: 2 },
          992: { slidesPerView: 3 },
          1200: { slidesPerView: 4 }
        }
      }
    "
	>
		<div class="swiper ov:visible@+sm!">
			<div class="veda-swiper-wrapper swiper-wrapper">
				{{ Content }}
			</div>
		</div>
		{% comment %}<BẮT_ĐẦU_TÁCH_FILE_1:[section,backgroundFixed,backgroundColor,bgImage,backgroundImage,sectionPadding,containerType,containerGap,containerWidth,settingGap,settingGapVertical,colGap,rowGap,sectionSeparator,_class,_component,_default_link,borderRadius,delay,gap]>{% endcomment %}
		{% liquid
			assign arrowGeneralClassName = 'fz:pfs(24px,30px)! d:flex! ai:center jc:center ov:hidden trs:0.3s m:5px'
			
			case section.settings.VEDA_select_1
				when 'square_shadow'
					assign arrowVariantClassName = 'w:pfs(30px,50px) h:pfs(30px,50px) bgc:color-light c:color-gray9 c:color-primary|h bxsh:0_5px_15px_color-gray9.1'
				when 'square_border'
					assign arrowVariantClassName = 'w:pfs(30px,50px) h:pfs(30px,50px) bgc:color-light bd:1px_solid_color-gray2 c:color-gray9 c:color-primary|h'
				when 'square_gray'
					assign arrowVariantClassName = 'w:pfs(30px,50px) h:pfs(30px,50px) bgc:color-gray2 c:color-gray9 c:color-primary|h'
				when 'circle_shadow'
					assign arrowVariantClassName = 'w:pfs(30px,50px) h:pfs(30px,50px) bgc:color-light c:color-gray9 c:color-primary|h bxsh:0_5px_15px_color-gray9.1 bdrs:50%'
				when 'circle_border'
					assign arrowVariantClassName = 'w:pfs(30px,50px) h:pfs(30px,50px) bgc:color-light bd:1px_solid_color-gray2 c:color-gray9 c:color-primary|h bdrs:50%'
				when 'circle_gray'
					assign arrowVariantClassName = 'w:pfs(30px,50px) h:pfs(30px,50px) bgc:color-gray2 c:color-gray9 c:color-primary|h bdrs:50%'
				when 'custom'
					assign arrowVariantClassName = 'w:30px h:30px'
				else
					assign arrowVariantClassName = 'w:30px h:30px'
			endcase
		%}
		
		{% if section.settings.VEDA_switch_1
		and section.settings.VEDA_select_2 != 'top'
		or section.settings.VEDA_select_2 == 'top'
		and 12 != 12
		%}
			<div
				{% if section.settings.VEDA_select_2 == 'top' and 12 != 12 %}
					class="d:flex pos:absolute b:calc(100%_+_5px) r:0"
				{% elsif section.settings.VEDA_select_2 == 'bottom' %}
					class="d:flex@sm d:none mt:15px"
					style="justify-content: {{ "center" }}"
				{% else %}
					class="d:flex@sm d:none"
				{% endif %}
			>
				<div
					{% if section.settings.VEDA_select_2 == 'middle' %}
						class="swiper-button-prev swiper-button-prev-middle l:0! trf:translate(-50%,-50%) m:0! {{ arrowGeneralClassName }} {{ arrowVariantClassName }}"
					{% elsif section.settings.VEDA_select_2 == 'middle_out' %}
						class="swiper-button-prev swiper-button-prev-middle-out l:auto! r:100%! trf:translate(0,-50%) {{ arrowGeneralClassName }} {{ arrowVariantClassName }}"
					{% elsif section.settings.VEDA_select_2 == 'middle_in' %}
						class="swiper-button-prev swiper-button-prev-middle-in l:0! trf:translate(0,-50%) {{ arrowGeneralClassName }} {{ arrowVariantClassName }}"
					{% else %}
						class="swiper-button-prev swiper-button-prev-bottom pos:static! trf:none! mt:0! {{ arrowGeneralClassName }} {{ arrowVariantClassName }}"
					{% endif %}
					
				>
					<span>{{ section.settings.VEDA_icon_2 }}</span>
				</div>
				<div
					{% if section.settings.VEDA_select_2 == 'middle' %}
						class="swiper-button-next swiper-button-next-middle r:0! trf:translate(50%,-50%) m:0! {{ arrowGeneralClassName }} {{ arrowVariantClassName }}"
					{% elsif section.settings.VEDA_select_2 == 'middle_out' %}
						class="swiper-button-next swiper-button-next-middle r:auto! l:100%! trf:translate(0,-50%) {{ arrowGeneralClassName }} {{ arrowVariantClassName }}"
					{% elsif section.settings.VEDA_select_2 == 'middle_in' %}
						class="swiper-button-next swiper-button-next-middle r:0! trf:translate(0,-50%) {{ arrowGeneralClassName }} {{ arrowVariantClassName }}"
					{% else %}
						class="swiper-button-next swiper-button-next-bottom pos:static! trf:none! mt:0! {{ arrowGeneralClassName }} {{ arrowVariantClassName }}"
					{% endif %}
					
				>
					<span>{{ section.settings.VEDA_icon_1 }}</span>
				</div>
			</div>
		{% endif %}
		{% comment %}<KẾT_THÚC_TÁCH_FILE>{% endcomment %}
		{% if section.settings.VEDA_switch_2 %}
			<div
				class="swiper-pagination c:color-gray9 bd:2px_solid_color-light*span bxz:content-box*span"
				data-child-css="{{ null }}"
			></div>
		{% endif %}
	</div>
{% endcapture %}

<section
	data-id="{{ uniqueId }}"
	class="veda-lazyload pos:relative z:1 bgz:cover bgp:center"
	style="{{ backgroundColor }}{{ backgroundImage }}{{ sectionPadding }}{{ sectionSeparator }}"
>
	<div class="{{ containerType }}">
		<div
			{% if 'left' == 'left' %}
				class="row mt:0!"
			{% else %}
				class="row mt:0! fld:row-reverse"
			{% endif %}
		>
			<div class="col-xs-{{ 12 }} col-sm-{{ 12 }} col-md-{{ 12 }} col-lg-{{ 12 }} mt:0!">
				<div
					{% if 12 == 12 %}
						class="pos:relative d:flex ai:center jc:space-between"
					{% else %}
						class="pos:relative"
					{% endif %}
				>
					{% comment %}<BẮT_ĐẦU_TÁCH_FILE_2:[section,backgroundFixed,backgroundColor,bgImage,backgroundImage,sectionPadding,containerType,containerGap,containerWidth,settingGap,settingGapVertical,colGap,rowGap,sectionSeparator,_class,_component,_default_link,borderRadius,delay,gap,arrowGeneralClassName,arrowVariantClassName]>{% endcomment %}
					<div class="d:flex fld:column w:100%">
						{% comment %}CẢNH BÁO: Các field settings đã bị cắt vợi đi để pass qua shopify theme check => Các item sẽ trở thành y hệt nhau về một số thứ => Check code để fix css sao cho giống với theme demo => Ví dụ mỗi item đều có field color picker để setup background. Item 1 màu xanh, Item 2 màu đỏ => Sync ở chế độ cắt vợi đi thì cả 2 Item sẽ thành màu xanh => Sai với theme demo => Cần fix{% endcomment %}
						
						{% for block in section.blocks %}
							{% assign heading_item = block.settings %}
							
							{% liquid
								assign align = 'left'
								
								if 'left' == 'left'
									assign align = 'start'
								elsif 'left' == 'right'
									assign align = 'end'
								endif
							%}
							{% capture attr %}
								 class="fw:500" style="text-align: {{ align }}"
							{% endcapture %}
							{% case block.type %}
								{% when 'heading_title' %}
									{% if heading_item.heading___title_tag_name == 'h2' %}
										<h2 {{ attr }}>{{ heading_item.heading___title }}</h2>
									{% elsif heading_item.heading___title_tag_name == 'h3' %}
										<h3 {{ attr }}>{{ heading_item.heading___title }}</h3>
									{% elsif heading_item.heading___title_tag_name == 'h4' %}
										<h4 {{ attr }}>{{ heading_item.heading___title }}</h4>
									{% elsif heading_item.heading___title_tag_name == 'h5' %}
										<h5 {{ attr }}>{{ heading_item.heading___title }}</h5>
									{% elsif heading_item.heading___title_tag_name == 'h6' %}
										<h6 {{ attr }}>{{ heading_item.heading___title }}</h6>
									{% endif %}
								{% when 'heading_text' %}
									<div
										
										style="text-align: {{ align }}"
										class="fz:16px"
									>
										{{ heading_item.heading___text }}
									</div>
								{% when 'heading_icon' %}
									<div
										
										{% if 'left' == 'left' %}
											style="text-align: start"
										{% elsif 'left' == 'center' %}
											style="text-align: {{ "left" }}; margin-left: auto; margin-right: auto"
										{% elsif 'left' == 'right' %}
											style="text-align: end; margin-left: auto; margin-right: 0"
										{% endif %}
										class="fz:34px"
									>
										{{ heading_item.heading___icon }}
									</div>
								{% when 'heading_space' %}
									<div style="height: {{ heading_item.heading___space }}px"></div>
								{% when 'link' %}
									<a
										href="{{ heading_item.link }}"
										class="ff:font-secondary fz:16px fw:500 c:color-gray9 c:color-gray9|h! td:underline"
										data-css="{{ heading_item.link_design.id }}"
										style="text-align: {{ align }}"
									>
										{{ heading_item.text_link }}
									</a>
								{% when 'heading_divider' %}
									{% assign headingDividerPadding = 'padding-top: '
										| append: null
										| append: 'px;padding-right: '
										| append: null
										| append: 'px;padding-bottom: '
										| append: null
										| append: 'px;padding-left: '
										| append: null
										| append: 'px;'
									%}
									<div
										class="pt:20px fz:0"
										style="text-align: {{ align }};{{ headingDividerPadding }}"
									>
										{% if heading_item.heading___divider == 'wave' %}
											<div class="d:inline-block">
												<svg
													width="56px"
													height="7px"
													viewBox="0 0 56 7"
													version="1.1"
													xmlns="http://www.w3.org/2000/svg"
													xmlns:xlink="http://www.w3.org/1999/xlink"
													fill="none"
												>
													<g transform="translate(-288.000000, -4390.000000)" class="stk:color-gray3" style="stroke: {{ null }}">
														<g transform="translate(135.000000, 4033.000000)">
															<g transform="translate(0.000000, 48.000000)">
																<g transform="translate(153.000000, 310.000000)">
																	<path d="M0,0 C4.64733427,0 4.65894638,2 9.33333333,2 C14.0077203,2 13.9400367,0 18.6666667,0 C23.3932966,0 23.3301172,2 28,2 C32.6698828,2 32.6447946,0 37.3333333,0 C42.0218721,0 41.9540981,2 46.6666667,2 C51.3792353,2 51.3554302,0 56,0"></path>
																	<path d="M0,3 C4.64733427,3 4.65894638,5 9.33333333,5 C14.0077203,5 13.9400367,3 18.6666667,3 C23.3932966,3 23.3301172,5 28,5 C32.6698828,5 32.6447946,3 37.3333333,3 C42.0218721,3 41.9540981,5 46.6666667,5 C51.3792353,5 51.3554302,3 56,3"></path>
																</g>
															</g>
														</g>
													</g>
												</svg>
											</div>
										{% elsif heading_item.heading___divider == 'mountain' %}
											<div class="d:inline-block">
												<svg
													width="60px"
													height="9px"
													viewBox="0 0 60 9"
													version="1.1"
													xmlns="http://www.w3.org/2000/svg"
													xmlns:xlink="http://www.w3.org/1999/xlink"
												>
													<g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
														<g transform="translate(-3.000000, -47.000000)" stroke-width="2" class="stk:color-gray3" style="stroke: {{ null }}">
															<g transform="translate(0.000000, 45.000000)">
																<polyline points="4 9 9.8 4 15.6 9 21.4 4 27.2 9 33 4 38.8 9 44.6 4 50.4 9 56.2 4 62 9"></polyline>
															</g>
														</g>
													</g>
												</svg>
											</div>
										{% else %}
											<div
												class="d:inline-block! w:50px h:2px bgc:color-gray3"
												style="background-color: {{ null }}"
											></div>
										{% endif %}
									</div>
								{% else %}
							
							{% endcase %}
						{% endfor %}
					</div>
					{% comment %}<KẾT_THÚC_TÁCH_FILE>{% endcomment %}
					{% comment %}<BẮT_ĐẦU_TÁCH_FILE_3:[section,backgroundFixed,backgroundColor,bgImage,backgroundImage,sectionPadding,containerType,containerGap,containerWidth,settingGap,settingGapVertical,colGap,rowGap,sectionSeparator,_class,_component,_default_link,borderRadius,delay,gap,arrowGeneralClassName,arrowVariantClassName,align,headingDividerPadding]>{% endcomment %}
					{% liquid
						if section.settings.VEDA_select_4 == 'link'
							assign defaultClass = ''
						else
							assign defaultClass = ' p:12px_20px bdrs:6px fz:14px'
						endif
						
						if section.settings.VEDA_select_3 == 'bottom'
							assign defaultForBottomClass = ' mt:30px'
						else
							assign defaultForBottomClass = ''
						endif
						
						case section.settings.VEDA_select_4
							when 'primary'
								assign variantClass = ' bgc:color-primary c:color-light-freeze bgc:color-gray9|h c:color-light|h'
							when 'secondary'
								assign variantClass = ' bgc:color-secondary c:color-light-freeze bgc:color-gray9|h c:color-light|h'
							when 'dark'
								assign variantClass = ' bgc:color-gray9 c:color-light bgc:color-primary|h c:color-light-freeze|h'
							when 'gray'
								assign variantClass = ' bgc:color-gray2 c:color-gray9 bgc:color-primary|h c:color-light-freeze|h'
							when 'light'
								assign variantClass = ' bgc:color-light c:color-gray9 bgc:color-primary|h c:color-light-freeze|h'
							else
								assign variantClass = ' c:color-gray9 c:color-primary|h'
						endcase
						
						assign custom_class = ''
						
						if _class
							assign custom_class = _class
						endif
					%}
					{% comment %}<KẾT_THÚC_TÁCH_FILE>{% endcomment %}
					
					{% comment %}<BẮT_ĐẦU_TÁCH_FILE_4:[section,backgroundFixed,backgroundColor,bgImage,backgroundImage,sectionPadding,containerType,containerGap,containerWidth,settingGap,settingGapVertical,colGap,rowGap,sectionSeparator,_class,_component,_default_link,borderRadius,delay,gap,arrowGeneralClassName,arrowVariantClassName,align,headingDividerPadding,defaultClass,defaultForBottomClass,variantClass,custom_class]>{% endcomment %}
					{% liquid
						assign arrowTopGeneralClassName = 'fz:pfs(24px,30px)! d:flex! ai:center jc:center ov:hidden trs:0.3s m:5px'
						
						case section.settings.VEDA_select_1
							when 'square_shadow'
								assign arrowTopVariantClassName = 'w:pfs(30px,50px) h:pfs(30px,50px) bgc:color-light c:color-gray9 c:color-primary|h bxsh:0_5px_15px_color-gray9.1'
							when 'square_border'
								assign arrowTopVariantClassName = 'w:pfs(30px,50px) h:pfs(30px,50px) bgc:color-light bd:1px_solid_color-gray2 c:color-gray9 c:color-primary|h'
							when 'square_gray'
								assign arrowTopVariantClassName = 'w:pfs(30px,50px) h:pfs(30px,50px) bgc:color-gray2 c:color-gray9 c:color-primary|h'
							when 'circle_shadow'
								assign arrowTopVariantClassName = 'w:pfs(30px,50px) h:pfs(30px,50px) bgc:color-light c:color-gray9 c:color-primary|h bxsh:0_5px_15px_color-gray9.1 bdrs:50%'
							when 'circle_border'
								assign arrowTopVariantClassName = 'w:pfs(30px,50px) h:pfs(30px,50px) bgc:color-light bd:1px_solid_color-gray2 c:color-gray9 c:color-primary|h bdrs:50%'
							when 'circle_gray'
								assign arrowTopVariantClassName = 'w:pfs(30px,50px) h:pfs(30px,50px) bgc:color-gray2 c:color-gray9 c:color-primary|h bdrs:50%'
							when 'custom'
								assign arrowTopVariantClassName = 'w:30px h:30px'
							else
								assign arrowTopVariantClassName = 'w:30px h:30px'
						endcase
					%}
					
					{% if section.settings.VEDA_switch_1 and section.settings.VEDA_select_2 == 'top' and 12 == 12 %}
						<div class="d:flex ml:10px mb:10px">
							<div
								class="swiper-button-prev swiper-button-prev-top pos:static! trf:none! {{ arrowTopGeneralClassName }} {{ arrowTopVariantClassName }}"
								
							>
								<span>{{ section.settings.VEDA_icon_2 }}</span>
							</div>
							<div
								class="swiper-button-next swiper-button-next-top pos:static! trf:none! mr:0! {{ arrowTopGeneralClassName }} {{ arrowTopVariantClassName }}"
								
							>
								<span>{{ section.settings.VEDA_icon_1 }}</span>
							</div>
						</div>
					{% endif %}
					{% comment %}<KẾT_THÚC_TÁCH_FILE>{% endcomment %}
				</div>
			</div>
			{% liquid
				assign contentXs = 12 | minus: 12
				
				assign contentSm = 12 | minus: 12
				
				assign contentMd = 12 | minus: 12
				
				assign contentLg = 12 | minus: 12
			%}
			<div class="col-xs-{{ contentXs }} col-sm-{{ contentSm }} col-md-{{ contentMd }} col-lg-{{ contentLg }} mt:0!">
				{{ SwiperSlider }}
			</div>
		</div>
		{% comment %}<BẮT_ĐẦU_TÁCH_FILE_5:[section,backgroundFixed,backgroundColor,bgImage,backgroundImage,sectionPadding,containerType,containerGap,containerWidth,settingGap,settingGapVertical,colGap,rowGap,sectionSeparator,_class,_component,_default_link,borderRadius,delay,gap,arrowGeneralClassName,arrowVariantClassName,align,headingDividerPadding,defaultClass,defaultForBottomClass,variantClass,custom_class,arrowTopGeneralClassName,arrowTopVariantClassName,contentXs,contentSm,contentMd,contentLg]>{% endcomment %}
		{% liquid
			if section.settings.VEDA_select_4 == 'link'
				assign defaultClass = ''
			else
				assign defaultClass = ' p:12px_20px bdrs:6px fz:14px'
			endif
			
			if section.settings.VEDA_select_3 == 'bottom'
				assign defaultForBottomClass = ' mt:30px'
			else
				assign defaultForBottomClass = ''
			endif
			
			case section.settings.VEDA_select_4
				when 'primary'
					assign variantClass = ' bgc:color-primary c:color-light-freeze bgc:color-gray9|h c:color-light|h'
				when 'secondary'
					assign variantClass = ' bgc:color-secondary c:color-light-freeze bgc:color-gray9|h c:color-light|h'
				when 'dark'
					assign variantClass = ' bgc:color-gray9 c:color-light bgc:color-primary|h c:color-light-freeze|h'
				when 'gray'
					assign variantClass = ' bgc:color-gray2 c:color-gray9 bgc:color-primary|h c:color-light-freeze|h'
				when 'light'
					assign variantClass = ' bgc:color-light c:color-gray9 bgc:color-primary|h c:color-light-freeze|h'
				else
					assign variantClass = ' c:color-gray9 c:color-primary|h'
			endcase
			
			assign custom_class = ''
			
			if _class
				assign custom_class = _class
			endif
		%}
		
		{% capture ViewAllTop %}
			{% if section.settings.button_view_all___enable and section.settings.VEDA_select_3 == 'top' %}
				<div class="d:none@+md flxs:0">
					{{ ViewAllBase }}
				</div>
			{% endif %}
		{% endcapture %}
	</div>
	{% if section.settings.VEDA_switch_7 %}
		<div
			class="pos:absolute ins:0 z:-1"
			style="background-color: {{ null }};backdrop-filter: blur({{ section.settings["VEDA_slider_3"] }}px)"
		></div>
	{% endif %}
</section>
{% schema %}
{
	"name": "Services Carousel 5",
	"blocks": [
		{
			"type": "content",
			"name": "Content",
			"settings": [
				{
					"label": "Content > Title",
					"id": "content___title",
					"type": "liquid",
					"info": "Useful: Using [ MyShopKit HTML Generator](https://myshopkit.app/shopify-color-codes/) to make up your text",
					"default": "Category"
				},
				{
					"label": "Content > Description",
					"id": "content___description",
					"type": "liquid"
				},
				{
					"label": "Content > Icon",
					"info": "[Get icon](https://fontawesome.com/v5/search)",
					"id": "content___icon",
					"type": "html",
					"default": "<i class=\"far fa-atom\"></i>"
				}
			]
		},
		{
			"type": "heading_title",
			"name": "Heading > Title",
			"settings": [
				{
					"label": "Heading > Tag Name",
					"id": "heading___title_tag_name",
					"type": "select",
					"default": "h2",
					"options": [
						{
							"label": "H2",
							"value": "h2"
						},
						{
							"label": "H3",
							"value": "h3"
						},
						{
							"label": "H4",
							"value": "h4"
						},
						{
							"label": "H5",
							"value": "h5"
						},
						{
							"label": "H6",
							"value": "h6"
						}
					]
				},
				{
					"label": "Heading > Title",
					"id": "heading___title",
					"type": "liquid",
					"info": "Useful: Using [ MyShopKit HTML Generator](https://myshopkit.app/shopify-color-codes/) to make up your text",
					"default": "This is a title"
				}
			]
		},
		{
			"type": "heading_text",
			"name": "Heading > Text",
			"settings": [
				{
					"label": "Heading > Text",
					"id": "heading___text",
					"type": "liquid",
					"info": "Useful: Using [ MyShopKit HTML Generator](https://myshopkit.app/shopify-color-codes/) to make up your text",
					"default": "<p>This is a text</p>"
				}
			]
		},
		{
			"type": "heading_divider",
			"name": "Heading > Divider",
			"settings": [
				{
					"label": "Heading > Divider",
					"id": "heading___divider",
					"type": "select",
					"default": "line",
					"options": [
						{
							"label": "Line",
							"value": "line"
						},
						{
							"label": "Wave",
							"value": "wave"
						},
						{
							"label": "Mountain",
							"value": "mountain"
						}
					]
				}
			]
		},
		{
			"type": "heading_icon",
			"name": "Heading > Icon",
			"settings": [
				{
					"label": "Heading > Icon",
					"info": "[Get icon](https://fontawesome.com/v5/search)",
					"id": "heading___icon",
					"type": "html",
					"default": "<i class=\"far fa-atom\"></i>"
				}
			]
		},
		{
			"type": "heading_space",
			"name": "Heading > Space",
			"settings": [
				{
					"label": "Heading > Space",
					"id": "heading___space",
					"type": "number",
					"default": 20
				}
			]
		}
	],
	"settings": [
		{
			"label": "Slider Settings > Right",
			"info": "[Get icon](https://fontawesome.com/v5/search)",
			"id": "VEDA_icon_1",
			"type": "html",
			"default": "<i class=\"fal fa-angle-right\"></i>"
		},
		{
			"label": "Slider Settings > Left",
			"info": "[Get icon](https://fontawesome.com/v5/search)",
			"id": "VEDA_icon_2",
			"type": "html",
			"default": "<i class=\"fal fa-angle-left\"></i>"
		},
		{
			"label": "Slider Settings > Arrow Variant",
			"id": "VEDA_select_1",
			"type": "select",
			"default": "custom",
			"options": [
				{
					"label": "Custom",
					"value": "custom"
				},
				{
					"label": "Square Shadow",
					"value": "square_shadow"
				},
				{
					"label": "Square Border",
					"value": "square_border"
				},
				{
					"label": "Square Gray",
					"value": "square_gray"
				},
				{
					"label": "Circle Shadow",
					"value": "circle_shadow"
				},
				{
					"label": "Circle Border",
					"value": "circle_border"
				},
				{
					"label": "Circle Gray",
					"value": "circle_gray"
				}
			]
		},
		{
			"label": "Slider Settings > Arrow Position",
			"id": "VEDA_select_2",
			"type": "select",
			"default": "middle",
			"options": [
				{
					"label": "Top",
					"value": "top"
				},
				{
					"label": "Middle",
					"value": "middle"
				},
				{
					"label": "Middle Out",
					"value": "middle_out"
				},
				{
					"label": "Middle In",
					"value": "middle_in"
				},
				{
					"label": "Bottom",
					"value": "bottom"
				}
			]
		},
		{
			"label": "Slider Settings > Enable Arrow",
			"id": "VEDA_switch_1",
			"type": "checkbox",
			"default": true
		},
		{
			"label": "Slider Settings > Enable Pagination",
			"id": "VEDA_switch_2",
			"type": "checkbox",
			"default": false
		},
		{
			"label": "Slider Settings > Loop",
			"id": "slider_settings___loop",
			"type": "checkbox",
			"default": false
		},
		{
			"label": "Slider Settings > Delay (ms)",
			"id": "slider_settings___delay",
			"type": "number",
			"default": 4000
		},
		{
			"label": "Slider Settings > Auto Play",
			"id": "VEDA_switch_3",
			"type": "checkbox",
			"default": false
		},
		{
			"label": "View All Button > Choose",
			"info": "[Get icon](https://fontawesome.com/v5/search)",
			"id": "VEDA_icon_3",
			"type": "html",
			"default": "<i class=\"far fa-atom\"></i>"
		},
		{
			"label": "Section Settings > Background Type",
			"id": "VEDA_select_6",
			"type": "select",
			"default": "none",
			"options": [
				{
					"label": "Color",
					"value": "color"
				},
				{
					"label": "None",
					"value": "none"
				}
			]
		},
		{
			"type": "color",
			"id": "background_color",
			"label": "Background Color",
			"default": "#fff"
		},
		{
			"type": "range",
			"id": "background_opacity",
			"min": 0,
			"unit": "%",
			"max": 100,
			"step": 1,
			"label": "Opacity",
			"default": 100
		},
		{
			"label": "Section Settings > Container Width",
			"id": "VEDA_select_7",
			"type": "select",
			"default": "boxed",
			"options": [
				{
					"label": "Boxed",
					"value": "boxed"
				},
				{
					"label": "Full Width",
					"value": "full_width"
				},
				{
					"label": "Manual",
					"value": "manual"
				}
			]
		}
	],
	"tag": "div",
	"presets": [
		{
			"name": "Services Carousel 5",
			"blocks": [
				{
					"type": "heading_title"
				},
				{
					"type": "heading_space"
				},
				{
					"type": "content"
				},
				{
					"type": "content"
				},
				{
					"type": "content"
				},
				{
					"type": "content"
				},
				{
					"type": "content"
				}
			]
		}
	]
}
{% endschema %}
